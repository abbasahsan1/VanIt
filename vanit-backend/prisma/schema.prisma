generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model bus_locations {
  id         Int       @id @default(autoincrement())
  bus_number String    @unique(map: "bus_number") @db.VarChar(50)
  latitude   Decimal   @db.Decimal(10, 7)
  longitude  Decimal   @db.Decimal(10, 7)
  updated_at DateTime? @default(now()) @db.Timestamp(0)
}

model buses {
  id         Int           @id @default(autoincrement())
  bus_name   String        @db.VarChar(255)
  status     buses_status? @default(inactive)
  created_at DateTime?     @default(now()) @db.Timestamp(0)
}

model captain_complaints {
  complaintID Int       @id @default(autoincrement())
  captainID   Int?
  message     String    @db.Text
  timestamp   DateTime? @default(now()) @db.DateTime(0)
  status      String?   @default("Pending") @db.VarChar(20)
  captains    captains? @relation(fields: [captainID], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "captain_complaints_ibfk_1")

  @@index([captainID], map: "captainID")
}

model captains {
  id                      Int                  @id @default(autoincrement())
  status                  captains_status?     @default(inactive)
  created_at              DateTime?            @default(now()) @db.Timestamp(0)
  first_name              String               @db.VarChar(50)
  last_name               String               @db.VarChar(50)
  dob                     DateTime             @db.Date
  cnic                    String               @unique(map: "cnic") @db.VarChar(15)
  cnic_picture            String?              @db.VarChar(255)
  driving_license         String               @unique(map: "driving_license") @db.VarChar(20)
  driving_license_picture String?              @db.VarChar(255)
  phone                   String               @db.VarChar(20)
  alternate_phone         String?              @db.VarChar(20)
  email                   String               @unique(map: "email") @db.VarChar(100)
  address                 String               @db.VarChar(255)
  route_name              String?              @db.VarChar(100)
  bus_no                  String?              @db.VarChar(50)
  password                String?              @db.VarChar(255)
  route_id                Int?
  is_active               Boolean?             @default(false)
  current_route           String?              @db.VarChar(100)
  captain_complaints      captain_complaints[]
  routes                  routes?              @relation(fields: [route_name], references: [route_name], onDelete: NoAction, onUpdate: NoAction, map: "captains_ibfk_1")

  @@index([route_name], map: "route_name")
}

model contact_messages {
  id         Int       @id @default(autoincrement())
  name       String?   @db.VarChar(100)
  email      String?   @db.VarChar(100)
  message    String?   @db.Text
  created_at DateTime? @default(now()) @db.Timestamp(0)
}

model emergency_alerts {
  id                  Int       @id @default(autoincrement())
  first_name          String    @db.VarChar(255)
  last_name           String    @db.VarChar(255)
  registration_number String    @db.VarChar(50)
  phone               String    @db.VarChar(20)
  route_name          String    @db.VarChar(100)
  stop_name           String    @db.VarChar(100)
  timestamp           DateTime? @default(now()) @db.Timestamp(0)
}

model invoices {
  invoiceID   Int       @id @default(autoincrement())
  studentID   Int?
  imagePath   String    @db.VarChar(255)
  description String?   @db.Text
  timestamp   DateTime? @default(now()) @db.DateTime(0)
  students    students? @relation(fields: [studentID], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "invoices_ibfk_1")

  @@index([studentID], map: "studentID")
}

model routes {
  id         Int        @id @default(autoincrement())
  route_name String     @unique(map: "route_name") @db.VarChar(100)
  created_at DateTime?  @default(now()) @db.Timestamp(0)
  captains   captains[]
  stops      stops[]
}

model stops {
  id         Int       @id @default(autoincrement())
  stop_name  String    @db.VarChar(100)
  route_id   Int?
  latitude   Decimal?  @db.Decimal(10, 7)
  longitude  Decimal?  @db.Decimal(10, 7)
  created_at DateTime? @default(now()) @db.Timestamp(0)
  routes     routes?   @relation(fields: [route_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "stops_ibfk_1")

  @@index([route_id], map: "route_id")
}

model student_feedback {
  feedbackID Int       @id @default(autoincrement())
  studentID  Int?
  message    String    @db.Text
  timestamp  DateTime? @default(now()) @db.DateTime(0)
  students   students? @relation(fields: [studentID], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "student_feedback_ibfk_1")

  @@index([studentID], map: "studentID")
}

model students {
  id                  Int                @id @default(autoincrement())
  first_name          String?            @db.VarChar(50)
  last_name           String?            @db.VarChar(50)
  email               String?            @unique(map: "email") @db.VarChar(100)
  password            String?            @db.VarChar(255)
  registration_number String?            @db.VarChar(50)
  semester            String?            @db.VarChar(20)
  route_name          String?            @db.VarChar(255)
  stop_name           String             @db.VarChar(100)
  phone               String?            @db.VarChar(20)
  emergency_contact   String?            @db.VarChar(20)
  address             String?            @db.VarChar(255)
  picture             String?            @db.VarChar(255)
  created_at          DateTime?          @default(now()) @db.Timestamp(0)
  invoices            invoices[]
  student_feedback    student_feedback[]
}

enum captains_status {
  active
  inactive
}

enum buses_status {
  active
  inactive
}
